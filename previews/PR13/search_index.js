var documenterSearchIndex = {"docs":
[{"location":"#UnionArrays.jl","page":"Home","title":"UnionArrays.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [UnionArrays, UnionArrays.Abstract]","category":"page"},{"location":"#UnionArrays.UnionArrays","page":"Home","title":"UnionArrays.UnionArrays","text":"UnionArrays: array of arbitrary union types and type-stable reduction using Transducers\n\n(Image: Stable) (Image: Dev) (Image: GitHub Actions) (Image: Codecov) (Image: GitHub last commit)\n\n\n\n\n\n","category":"module"},{"location":"#UnionArrays.Abstract.UnionArray","page":"Home","title":"UnionArrays.Abstract.UnionArray","text":"UnionArray{T, N}\nUnionVector{T}\nUnionMatrix{T}\n\nUnionArray stores heterogeneous elements without indirections (which would happen in Array{Any}).\n\nExamples\n\njulia> using UnionArrays\n\njulia> xs = UnionVector(Any[UInt8(1), 2.0, (a=1, b=2)]);\n\njulia> xs[1]\n0x01\n\njulia> xs[2]\n2.0\n\njulia> xs[3]\n(a = 1, b = 2)\n\njulia> xs[1] = (a=3, b=4);\n\njulia> xs[1]\n(a = 3, b = 4)\n\njulia> M = reshape(xs, (1, :)) :: UnionMatrix;\n\njulia> M[1, 1]\n(a = 3, b = 4)\n\n\n\n\n\n","category":"type"}]
}
